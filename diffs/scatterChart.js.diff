--- src/models/scatter/scatterChart.js	2014-03-11 14:36:32.000000000 -0400
+++ ../nvd3/src/models/scatterChart.js	2014-03-10 19:22:16.000000000 -0400
@@ -7,17 +7,15 @@
   var scatter      = nv.models.scatter()
     , xAxis        = nv.models.axis()
     , yAxis        = nv.models.axis()
+    , legend       = nv.models.legend()
     , controls     = nv.models.legend()
     , distX        = nv.models.distribution()
     , distY        = nv.models.distribution()
     ;
 
-  var
-    canvas = new Chart({
-      chartClass: 'scatterChart',
-      wrapClass: 'scatterWrap',
-      margin: {top: 30, right: 20, bottom: 50, left: 75}
-    })
+  var margin       = {top: 30, right: 20, bottom: 50, left: 75}
+    , width        = null
+    , height       = null
     , color        = nv.utils.defaultColor()
     , x            = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : scatter.xScale()
     , y            = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : scatter.yScale()
@@ -25,6 +23,7 @@
     , yPadding     = 0
     , showDistX    = false
     , showDistY    = false
+    , showLegend   = true
     , showXAxis    = true
     , showYAxis    = true
     , rightAlignYAxis = false
@@ -37,8 +36,10 @@
     , tooltip      = null
     , state = {}
     , defaultState = null
-    , dispatch     = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState')
+    , dispatch     = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')
+    , noData       = "No Data Available."
     , transitionDuration = 250
+    , duration = 250
     ;
 
   scatter
@@ -70,6 +71,7 @@
   //------------------------------------------------------------
 
   var x0, y0;
+  var renderWatch = nv.utils.renderWatch(dispatch, duration);
 
   var showTooltip = function(e, offsetElement) {
     //TODO: make tooltip style an option between single or dual on axes (maybe on all charts with axes?)
@@ -77,8 +79,8 @@
     var left = e.pos[0] + ( offsetElement.offsetLeft || 0 ),
         top = e.pos[1] + ( offsetElement.offsetTop || 0),
         leftX = e.pos[0] + ( offsetElement.offsetLeft || 0 ),
-        topX = y.range()[0] + canvas.margin.top + ( offsetElement.offsetTop || 0),
-        leftY = x.range()[0] + canvas.margin.left + ( offsetElement.offsetLeft || 0 ),
+        topX = y.range()[0] + margin.top + ( offsetElement.offsetTop || 0),
+        leftY = x.range()[0] + margin.left + ( offsetElement.offsetLeft || 0 ),
         topY = e.pos[1] + ( offsetElement.offsetTop || 0),
         xVal = xAxis.tickFormat()(scatter.x()(e.point, e.pointIndex)),
         yVal = yAxis.tickFormat()(scatter.y()(e.point, e.pointIndex));
@@ -99,12 +101,28 @@
 
 
   function chart(selection) {
-    selection.each(function(data) {
-      canvas.setRoot(this);
-      var that = this;
+    renderWatch.reset();
+    renderWatch.models(scatter);
+    if (showXAxis) renderWatch.models(xAxis);
+    if (showYAxis) renderWatch.models(yAxis);
+    if (showDistX) renderWatch.models(distX);
+    if (showDistY) renderWatch.models(distY);
 
+    selection.each(function(data) {
+      var container = d3.select(this),
+          that = this;
 
-      chart.update = function() { canvas.svg.transition().duration(transitionDuration).call(chart); };
+      var availableWidth = (width  || parseInt(container.style('width')) || 960)
+                             - margin.left - margin.right,
+          availableHeight = (height || parseInt(container.style('height')) || 400)
+                             - margin.top - margin.bottom;
+
+      chart.update = function() {
+        if (duration === 0)
+          container.call(chart);
+        else
+          container.transition().duration(duration).call(chart);
+      };
       chart.container = this;
 
       //set state.disabled
@@ -121,8 +139,25 @@
         }
       }
 
-      if(canvas.noData(data)){
+      //------------------------------------------------------------
+      // Display noData message if there's nothing to show.
+
+      if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {
+        var noDataText = container.selectAll('.nv-noData').data([noData]);
+
+        noDataText.enter().append('text')
+          .attr('class', 'nvd3 nv-noData')
+          .attr('dy', '-.7em')
+          .style('text-anchor', 'middle');
+
+        noDataText
+          .attr('x', margin.left + availableWidth / 2)
+          .attr('y', margin.top + availableHeight / 2)
+          .text(function(d) { return d });
+
         return chart;
+      } else {
+        container.selectAll('.nv-noData').remove();
       }
 
       //------------------------------------------------------------
@@ -137,7 +172,47 @@
       //------------------------------------------------------------
 
 
-      canvas.wrapChart(data, ['nv-distWrap', 'nv-controlsWrap']);
+      //------------------------------------------------------------
+      // Setup containers and skeleton of chart
+
+      var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);
+      var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());
+      var gEnter = wrapEnter.append('g');
+      var g = wrap.select('g');
+
+      // background for pointer events
+      gEnter.append('rect').attr('class', 'nvd3 nv-background');
+
+      gEnter.append('g').attr('class', 'nv-x nv-axis');
+      gEnter.append('g').attr('class', 'nv-y nv-axis');
+      gEnter.append('g').attr('class', 'nv-scatterWrap');
+      gEnter.append('g').attr('class', 'nv-distWrap');
+      gEnter.append('g').attr('class', 'nv-legendWrap');
+      gEnter.append('g').attr('class', 'nv-controlsWrap');
+
+      //------------------------------------------------------------
+
+
+      //------------------------------------------------------------
+      // Legend
+
+      if (showLegend) {
+        var legendWidth = (showControls) ? availableWidth / 2 : availableWidth;
+        legend.width(legendWidth);
+
+        wrap.select('.nv-legendWrap')
+            .datum(data)
+            .call(legend);
+
+        if ( margin.top != legend.height()) {
+          margin.top = legend.height();
+          availableHeight = (height || parseInt(container.style('height')) || 400)
+                             - margin.top - margin.bottom;
+        }
+
+        wrap.select('.nv-legendWrap')
+            .attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + (-margin.top) +')');
+      }
 
       //------------------------------------------------------------
 
@@ -149,26 +224,26 @@
         controls.width(180).color(['#444']);
         g.select('.nv-controlsWrap')
             .datum(controlsData)
-            .attr('transform', 'translate(0,' + (-canvas.margin.top) +')')
+            .attr('transform', 'translate(0,' + (-margin.top) +')')
             .call(controls);
       }
 
       //------------------------------------------------------------
 
 
-      canvas.wrap.attr('transform', 'translate(' + canvas.margin.left + ',' + canvas.margin.top + ')');
+      wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
 
       if (rightAlignYAxis) {
           g.select(".nv-y.nv-axis")
-              .attr("transform", "translate(" + canvas.available.width + ",0)");
+              .attr("transform", "translate(" + availableWidth + ",0)");
       }
 
       //------------------------------------------------------------
       // Main Chart Component(s)
 
       scatter
-          .width(canvas.available.width)
-          .height(canvas.available.height)
+          .width(availableWidth)
+          .height(availableHeight)
           .color(data.map(function(d,i) {
             return d.color || color(d, i);
           }).filter(function(d,i) { return !data[i].disabled }));
@@ -178,8 +253,7 @@
 
       if (yPadding !== 0)
         scatter.yDomain(null);
-
-      canvas.wrap.select('.nv-scatterWrap')
+      wrap.select('.nv-scatterWrap')
           .datum(data.filter(function(d) { return !d.disabled }))
           .call(scatter);
 
@@ -209,10 +283,10 @@
       if (showXAxis) {
         xAxis
             .scale(x)
-            .ticks( xAxis.ticks() && xAxis.ticks().length ? xAxis.ticks() : canvas.available.width / 100 )
-            .tickSize( -canvas.available.height , 0);
+            .ticks( xAxis.ticks() && xAxis.ticks().length ? xAxis.ticks() : availableWidth / 100 )
+            .tickSize( -availableHeight , 0);
 
-        canvas.g.select('.nv-x.nv-axis')
+        g.select('.nv-x.nv-axis')
             .attr('transform', 'translate(0,' + y.range()[0] + ')')
             .call(xAxis);
 
@@ -221,10 +295,10 @@
       if (showYAxis) {
         yAxis
             .scale(y)
-            .ticks( yAxis.ticks() && yAxis.ticks().length ? yAxis.ticks() : canvas.available.height / 36 )
-            .tickSize( -canvas.available.width, 0);
+            .ticks( yAxis.ticks() && yAxis.ticks().length ? yAxis.ticks() : availableHeight / 36 )
+            .tickSize( -availableWidth, 0);
 
-        canvas.g.select('.nv-y.nv-axis')
+        g.select('.nv-y.nv-axis')
             .call(yAxis);
       }
 
@@ -233,13 +307,13 @@
         distX
             .getData(scatter.x())
             .scale(x)
-            .width(canvas.available.width)
+            .width(availableWidth)
             .color(data.map(function(d,i) {
               return d.color || color(d, i);
             }).filter(function(d,i) { return !data[i].disabled }));
-        canvas.gEnter.select('.nv-distWrap').append('g')
+        gEnter.select('.nv-distWrap').append('g')
             .attr('class', 'nv-distributionX');
-        canvas.g.select('.nv-distributionX')
+        g.select('.nv-distributionX')
             .attr('transform', 'translate(0,' + y.range()[0] + ')')
             .datum(data.filter(function(d) { return !d.disabled }))
             .call(distX);
@@ -249,15 +323,15 @@
         distY
             .getData(scatter.y())
             .scale(y)
-            .width(canvas.available.height)
+            .width(availableHeight)
             .color(data.map(function(d,i) {
               return d.color || color(d, i);
             }).filter(function(d,i) { return !data[i].disabled }));
-        canvas.gEnter.select('.nv-distWrap').append('g')
+        gEnter.select('.nv-distWrap').append('g')
             .attr('class', 'nv-distributionY');
-        canvas.g.select('.nv-distributionY')
+        g.select('.nv-distributionY')
             .attr('transform', 
-              'translate(' + (rightAlignYAxis ? canvas.available.width : -distY.size() ) + ',0)')
+              'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')
             .datum(data.filter(function(d) { return !d.disabled }))
             .call(distY);
       }
@@ -268,12 +342,12 @@
 
 
       if (d3.fisheye) {
-        canvasg.select('.nv-background')
+        g.select('.nv-background')
             .attr('width', availableWidth)
             .attr('height', availableHeight);
 
-        canvasg.select('.nv-background').on('mousemove', updateFisheye);
-        canvasg.select('.nv-background').on('click', function() { pauseFisheye = !pauseFisheye;});
+        g.select('.nv-background').on('mousemove', updateFisheye);
+        g.select('.nv-background').on('click', function() { pauseFisheye = !pauseFisheye;});
         scatter.dispatch.on('elementClick.freezeFisheye', function() {
           pauseFisheye = !pauseFisheye;
         });
@@ -336,7 +410,7 @@
         chart.update();
       });
 
-      canvas.legend.dispatch.on('stateChange', function(newState) {
+      legend.dispatch.on('stateChange', function(newState) {
         state.disabled = newState.disabled;
         dispatch.stateChange(state);
         chart.update();
@@ -348,7 +422,7 @@
         d3.select('.nv-chart-' + scatter.id() + ' .nv-series-' + e.seriesIndex + ' .nv-disty-' + e.pointIndex)
             .attr('x2', e.pos[0] + distX.size());
 
-        e.pos = [e.pos[0] + canvas.margin.left, e.pos[1] + canvas.margin.top];
+        e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top];
         dispatch.tooltipShow(e);
       });
 
@@ -376,8 +450,10 @@
       //store old scales for use in transitions on update
       x0 = x.copy();
       y0 = y.copy();
-    });
 
+
+    });
+    renderWatch.renderEnd('scatterChart immediate');
     return chart;
   }
 
@@ -408,7 +484,7 @@
   // expose chart's sub-components
   chart.dispatch = dispatch;
   chart.scatter = scatter;
-  chart.legend = canvas.legend;
+  chart.legend = legend;
   chart.controls = controls;
   chart.xAxis = xAxis;
   chart.yAxis = yAxis;
@@ -419,11 +495,11 @@
   chart.options = nv.utils.optionsFunc.bind(chart);
   
   chart.margin = function(_) {
-    if (!arguments.length) return canvas.margin;
-    canvas.margin.top    = typeof _.top    != 'undefined' ? _.top    : canvas.margin.top;
-    canvas.margin.right  = typeof _.right  != 'undefined' ? _.right  : canvas.margin.right;
-    canvas.margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : canvas.margin.bottom;
-    canvas.margin.left   = typeof _.left   != 'undefined' ? _.left   : canvas.margin.left;
+    if (!arguments.length) return margin;
+    margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;
+    margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;
+    margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;
+    margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;
     return chart;
   };
 
@@ -551,11 +627,20 @@
     noData = _;
     return chart;
   };
-
-  chart.transitionDuration = function(_) {
-    if (!arguments.length) return transitionDuration;
-    transitionDuration = _;
+  chart.duration = function(_) {
+    if (!arguments.length) return duration;
+    duration = _;
+    renderWatch.reset(duration);
+    scatter.duration(duration);
+    xAxis.duration(duration);
+    yAxis.duration(duration);
+    distX.duration(duration);
+    distY.duration(duration);
     return chart;
+  }
+  chart.transitionDuration = function(_) {
+    nv.deprecated('scatterChart.transitionDuration');
+    return chart.duration(_);
   };
 
   //============================================================
