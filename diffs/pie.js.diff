--- src/models/pie/pie.js	2014-03-11 14:36:32.000000000 -0400
+++ ../nvd3/src/models/pie.js	2014-03-10 19:22:16.000000000 -0400
@@ -4,14 +4,9 @@
   // Public Variables with Default Settings
   //------------------------------------------------------------
 
-  var
-    canvas = new Canvas({
-      margin: {top: 0, right: 0, bottom: 0, left: 0}
-      , width: 500
-      , height: 500
-      , chartClass: 'pie'
-      , wrapClass: 'pie'
-    })
+  var margin = {top: 0, right: 0, bottom: 0, left: 0}
+    , width = 500
+    , height = 500
     , getX = function(d) { return d.x }
     , getY = function(d) { return d.y }
     , getDescription = function(d) { return d.description }
@@ -36,20 +31,33 @@
 
   function chart(selection) {
     selection.each(function(data) {
-      canvas.setRoot(this);
+      var availableWidth = width - margin.left - margin.right,
+          availableHeight = height - margin.top - margin.bottom,
+          radius = Math.min(availableWidth, availableHeight) / 2,
+          arcRadius = radius-(radius / 5),
+          container = d3.select(this);
 
-      var radius = Math.min(canvas.available.width, canvas.available.height) / 2,
-          arcRadius = radius-(radius / 5);
 
-      debugger
-      canvas.wrapChart(data, ['nv-pie-labels']);
-      canvas.g.select('.nv-pie').attr('transform', 'translate(' + canvas.available.width / 2 + ',' + canvas.available.height / 2 + ')');
-      canvas.g.select('.nv-pieLabels').attr('transform', 'translate(' + canvas.available.width / 2 + ',' + canvas.available.height / 2 + ')');
+      //------------------------------------------------------------
+      // Setup containers and skeleton of chart
+
+      //var wrap = container.selectAll('.nv-wrap.nv-pie').data([data]);
+      var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);
+      var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);
+      var gEnter = wrapEnter.append('g');
+      var g = wrap.select('g');
+
+      gEnter.append('g').attr('class', 'nv-pie');
+      gEnter.append('g').attr('class', 'nv-pieLabels');
+
+      wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
+      g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');
+      g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');
 
       //------------------------------------------------------------
 
 
-      canvas.svg
+      container
           .on('click', function(d,i) {
               dispatch.chartClick({
                   data: d,
@@ -59,7 +67,9 @@
               });
           });
 
-      var arc = d3.svg.arc().outerRadius(arcRadius);
+
+      var arc = d3.svg.arc()
+                  .outerRadius(arcRadius);
 
       if (startAngle) arc.startAngle(startAngle)
       if (endAngle) arc.endAngle(endAngle);
@@ -68,14 +78,12 @@
       // Setup the Pie chart and choose the data element
       var pie = d3.layout.pie()
           .sort(null)
-          .value(function(d) {
-            return d.disabled ? 0 : getY(d)
-          });
+          .value(function(d) { return d.disabled ? 0 : getY(d) });
 
-      var slices = canvas.wrap.select('.nv-pie').selectAll('.nv-slice')
+      var slices = wrap.select('.nv-pie').selectAll('.nv-slice')
           .data(pie);
 
-      var pieLabels = canvas.wrap.select('.nv-pieLabels').selectAll('.nv-label')
+      var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label')
           .data(pie);
 
       slices.exit().remove();
@@ -273,23 +281,23 @@
   chart.options = nv.utils.optionsFunc.bind(chart);
 
   chart.margin = function(_) {
-    if (!arguments.length) return canvas.margin;
-    canvas.margin.top    = typeof _.top    != 'undefined' ? _.top    : canvas.margin.top;
-    canvas.margin.right  = typeof _.right  != 'undefined' ? _.right  : canvas.margin.right;
-    canvas.margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : canvas.margin.bottom;
-    canvas.margin.left   = typeof _.left   != 'undefined' ? _.left   : canvas.margin.left;
+    if (!arguments.length) return margin;
+    margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;
+    margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;
+    margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;
+    margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;
     return chart;
   };
 
   chart.width = function(_) {
-    if (!arguments.length) return canvas.options.size.width;
-    canvas.options.size.width = _;
+    if (!arguments.length) return width;
+    width = _;
     return chart;
   };
 
   chart.height = function(_) {
-    if (!arguments.length) return canvas.options.size.height;
-    canvas.options.size.height = _;
+    if (!arguments.length) return height;
+    height = _;
     return chart;
   };
 
